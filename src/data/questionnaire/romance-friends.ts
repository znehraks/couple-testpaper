import { ITest } from '@/types/utils';
import { currentStatus, QuestionType } from './common';

// 답변을 비슷하게 한 사람 매칭 기능

// 추후에 부모님 고사도 비슷한 맥락으로 만들기

// 질문군을 나눠서 한 질문당 10개씩 준비해서 랜덤으로 나오게하기
// 보기도 너무 중복되지 않게하기

// 입력받는건 최대한 안귀찮게하기

// 시험지는 최대한 진짜 시험지 같이 디자인해서 만들기

/**
 * 반드시 포함해야할 질문
 **/

export const movies = [
  '극한직업',
  '명량',
  '신과함께-죄와 벌',
  '국제시장',
  '베테랑',
  '괴물',
  '도둑들',
  '7번방의 선물',
  '암살',
  '광해, 왕이 된 남자',
  '택시운전사',
  '해운대',
  '실미도',
  '왕의 남자',
  '변호인',
  '국가대표',
  '해적: 바다로 간 산적',
  '수상한 그녀',
  '디 워',
  '백두산',
  '친구',
  '웰컴 투 동막골',
  '공조',
  '히말라야',
  '밀정',
  '최종병기 활',
  '태극기 휘날리며',
  '신과함께-인과 연',
  '군도: 민란의 시대',
  '아이 캔 스피크',
  '강철비',
  '끝까지 간다',
  '공작',
  '관상',
  '비긴 어게인',
  '독전',
  '마약왕',
  '더 테러 라이브',
  '터널',
  '검사외전',
  '좋은 놈, 나쁜 놈, 이상한 놈',
  '베를린',
  '타짜',
  '검은 사제들',
  '하모니',
  '은밀하게 위대하게',
  '차형사',
  '완득이',
  '헬로우 고스트',
  '아저씨',
  '범죄도시',
  '남산의 부장들',
  '덕혜옹주',
  '1987: 그날이 오면',
  '베스트셀러',
  '더 킹',
  '마녀',
  '그것만이 내 세상',
  '내부자들',
  '레 미제라블',
  '터널',
  '스윙키즈',
  '클로젯',
  '신의 한 수',
  '말모이',
  '마스터',
  '강철비 2: 정상회담',
  '비상선언',
  '아가씨',
  '퍼펙트맨',
  '미성년',
  '살인자의 기억법',
  '봉오동 전투',
  '해치지않아',
  '킹덤',
  '부산행',
  '해적: 바다로 간 산적',
  '특종: 량첸살인기',
  '미션 임파서블: 폴아웃',
  '분노의 질주: 홉스 앤 쇼',
  '반도',
  '미녀와 야수',
  '더 테러 라이브',
  '광해, 왕이 된 남자',
  '내부자들',
  '더 킹',
  '타이타닉',
  '아바타',
  '인셉션',
  '인터스텔라',
  '덩케르크',
  '다크 나이트',
  '다크 나이트 라이즈',
  '배트맨 비긴즈',
  '맨 오브 스틸',
  '배트맨 대 슈퍼맨: 저스티스의 시작',
  '원더우먼',
  '저스티스 리그',
  '조커',
  '아쿠아맨',
  '해외 영화',
  '어벤져스: 엔드게임',
  '어벤져스: 인피니티 워',
  '겨울왕국 2',
  '쥬라기 월드',
  '라이온 킹',
  '스타워즈: 깨어난 포스',
  '어벤져스',
  '분노의 질주: 더 세븐',
  '블랙 팬서',
  '해리 포터와 죽음의 성물 2부',
  '스타워즈: 라스트 제다이',
  '쥬라기 월드: 폴른 킹덤',
  '겨울왕국',
  '미녀와 야수',
  '인크레더블 2',
  '아이언맨 3',
  '분노의 질주: 더 익스트림',
  '미니언즈',
  '캡틴 아메리카: 시빌 워',
  '반지의 제왕: 왕의 귀환',
  '스파이더맨: 홈커밍',
  '쿵푸 팬더 3',
  '슈퍼배드 3',
  '스타워즈: 라이즈 오브 스카이워커',
  '캐리비안의 해적: 망자의 함',
  '배트맨 대 슈퍼맨: 저스티스의 시작',
  '해리 포터와 죽음의 성물 1부',
  '쥬라기 공원',
  '아이언맨 2',
  '토르: 라그나로크',
  '쿵푸 팬더 2',
  '슈퍼배드 2',
  '미션 임파서블: 폴아웃',
  '캡틴 마블',
  '알라딘',
  '겨울왕국 2',
  '겨울왕국',
  '캡틴 아메리카: 윈터 솔져',
  '데드풀 2',
  '데드풀',
  '해리 포터와 마법사의 돌',
  '쥬라기 월드',
  '쿵푸 팬더',
  '슈퍼배드',
  '해리 포터와 불의 잔',
  '해리 포터와 비밀의 방',
  '해리 포터와 아즈카반의 죄수',
  '해리 포터와 혼혈 왕자',
  '해리 포터와 불사조 기사단',
  '반지의 제왕: 두 개의 탑',
  '반지의 제왕: 왕의 귀환',
  '반지의 제왕: 반지 원정대',
  '토르: 다크 월드',
  '토르',
  '배트맨 비긴즈',
  '슈퍼맨 리턴즈',
  '원더우먼',
  '저스티스 리그',
  '배트맨 대 슈퍼맨: 저스티스의 시작',
  '원더우먼 1984',
  '스파이더맨',
  '스파이더맨 2',
  '스파이더맨 3',
  '어메이징 스파이더맨',
  '어메이징 스파이더맨 2',
  '베놈',
  '스파이더맨: 파 프롬 홈',
  '분노의 질주: 더 익스트림',
  '알라딘',
  '캡틴 마블',
  '해리 포터와 불사조 기사단',
  '반지의 제왕: 두 개의 탑',
  '반지의 제왕: 반지 원정대',
  '다크 나이트',
  '다크 나이트 라이즈',
  '배트맨 비긴즈',
  '맨 오브 스틸',
  '배트맨 대 슈퍼맨: 저스티스의 시작',
  '원더우먼',
  '저스티스 리그',
  '조커',
  '아쿠아맨',
  '원더우먼 1984',
  '분노의 질주: 더 세븐',
  '분노의 질주: 홉스 앤 쇼',
  '쥬라기 공원',
  '쥬라기 월드',
  '쥬라기 월드: 폴른 킹덤',
  '타이타닉',
  '아바타',
  '인셉션',
  '인터스텔라',
  '덩케르크',
  '다크 나이트',
  '다크 나이트 라이즈',
  '배트맨 비긴즈',
  '맨 오브 스틸',
  '배트맨 대 슈퍼맨: 저스티스의 시작',
  '원더우먼',
  '저스티스 리그',
  '조커',
  '아쿠아맨',
  '원더우먼 1984',
  '반지의 제왕: 왕의 귀환',
  '해리 포터와 죽음의 성물 1부',
  '해리 포터와 죽음의 성물 2부',
  '해리 포터와 불의 잔',
  '해리 포터와 비밀의 방',
  '해리 포터와 아즈카반의 죄수',
  '해리 포터와 혼혈 왕자',
  '해리 포터와 불사조 기사단',
  '겨울왕국',
  '겨울왕국 2',
  '알라딘',
  '슈퍼배드 2',
  '인크레더블',
];

export const restaurant = [
  '회사 앞 카페',
  '적당한 소음이 있는 맥주집',
  '왁지지껄 시끄러운 요리주점',
  '분위기 있는 파스타집',
  '든든한 국밥집',
];

export const drinkFood = [
  '삼겹살',
  '족발',
  '치킨',
  '전',
  '낙지볶음',
  '두부김치',
  '닭발',
  '순대',
  '막창',
  '건어물',
  '멍게',
  '문어숙회',
  '홍어삼합',
  '육회',
  '장어구이',
  '오징어볶음',
  '닭똥집',
  '전어',
  '조개구이',
  '새우구이',
  '오돌뼈',
  '소라무침',
  '골뱅이무침',
  '명란젓',
  '꼬막무침',
  '장조림',
  '생선구이',
  '회',
  '게장',
  '전복구이',
  '가리비구이',
  '훈제연어',
  '고추튀김',
  '쭈꾸미볶음',
  '피순대',
  '막국수',
  '수육',
  '육사시미',
  '꼬치구이',
  '떡볶이',
  '어묵탕',
  '콩나물국',
  '순두부찌개',
  '김치찌개',
  '된장찌개',
  '부대찌개',
  '감자탕',
  '탕류',
  '해장국',
  '튀김',
];

export const simulation = ['이젠 지겹다', '딱히 관심 없다', '한번씩은 본다', '아직 재미있다', '매번 기대된다'];

export const weekendActivity = ['일한다', '집에서 쉰다', '친구들과 만난다', '데이트한다', '취미생활을 한다'];

export const accomodation = ['호텔', '에어비앤비', '펜션', '모텔', '노숙'];

export const schoolDays = ['극 인싸', '나름 인싸', '인싸도 아싸도 아니다', '나름 아싸', '극 아싸'];

export const drinkKakaotalk = [
  '바로 읽고 답장한다',
  '목록에서 읽고 나중에 답장한다',
  '읽지 않고 나중에 답장한다',
  '읽고 답장하지 않는다',
  '카톡을 삭제한다',
];

export const colors = [
  '빨간색',
  '파란색',
  '노란색',
  '초록색',
  '주황색',
  '보라색',
  '분홍색',
  '갈색',
  '회색',
  '검은색',
  '흰색',
  '하늘색',
  '남색',
  '자주색',
  '연두색',
  '은색',
  '금색',
  '베이지색',
  '와인색',
  '청록색',
];

export const requiredQuestions: ITest[] = [
  { type: QuestionType.REQUIRED, question: '당신의 이름은?', choices: [] }, // 주관식
  { type: QuestionType.REQUIRED, question: '나는 지금?', choices: currentStatus },
];

export const myInfoQuestions: ITest[] = [
  // {
  //   type: QuestionType.MY_INFO,
  //   question: '이 중 내 취향에 제일 가까운 영화는?',
  //   choices: [...movies.sort(() => Math.random() - 0.5).slice(0, 4), '이 중에 없다'],
  // },

  {
    type: QuestionType.MY_INFO,
    question: '연예시뮬레이션(하트O그널, 나는O로, 솔로O옥 등...)은?',
    choices: simulation,
  },
  {
    type: QuestionType.MY_INFO,
    question: '주말에 주로 나는?',
    choices: weekendActivity,
  },
  {
    type: QuestionType.MY_INFO,
    question: '학창시절 나는?',
    choices: schoolDays,
  },
];

export const commonQuestions: ITest[] = [
  {
    type: QuestionType.COMMON,
    question: '소개팅이 잡혔다. 내가 정한 약속 장소는?',
    choices: restaurant,
  },
  {
    type: QuestionType.COMMON,
    question: '연인과 공원에서 산책 중이다. 이때 나는?',
    choices: [
      '손을 꼭 잡고 걷는다',
      '가볍게 어깨 동무 한다',
      '그냥 나란히 걷는다',
      '연인을 업고 간다',
      '앞 뒤로 일렬로 걸어간다',
    ],
  },
  {
    type: QuestionType.COMMON,

    question: '나의 최애 안주는?',
    choices: [...drinkFood.sort(() => Math.random() - 0.5).slice(0, 4), '이 중에 없다'],
  },
  {
    type: QuestionType.COMMON,
    question: '연인끼리 여행을 간다면 숙소는?',
    choices: accomodation,
  },
  {
    type: QuestionType.COMMON,
    question: '술자리에서 연인에게 카톡이 왔을때 나는?',
    choices: drinkKakaotalk,
  },
  {
    type: QuestionType.COMMON,
    question: '나는 연애를 시작할 때, 상대방과 안맞는 점이 보이면?',
    choices: ['손절한다', '상대에게 맞춰준다', '나에게 상대를 맞추려한다', '일단 넘어가고 지켜본다', '신경쓰지 않는다'],
  },
  {
    type: QuestionType.COMMON,
    question: '나는 연애를 끝낼 때 주로?',
    choices: [
      '과감하게 내가 찬다',
      '과감하진 않아도 먼저 찬다',
      '상대방의 이별통보를 유도한다',
      '잠수를 탄다',
      '상대방과 동시에 이별을 통보한다',
    ],
  },
  {
    type: QuestionType.COMMON,
    question: '연인과 말싸움이 붙었다. 이때 나는?',
    choices: [
      '무조건 이기고 본다',
      '무조건 져주고 본다',
      '상황에 따라 다르다',
      '일단 사과하되, 끝까지 밀리진 않는다.',
      '회피한다.',
    ],
  },
  {
    type: QuestionType.COMMON,
    question: '연인과 만나는 주기는?',
    choices: [
      '매일봐도 부족하다',
      '주 1회면 적당하다',
      '주 2~3회면 적당하다',
      '2주에 1회면 적당하다',
      '월 1회면 적당하다',
    ],
  },
  {
    type: QuestionType.COMMON,
    question: '내가 원하는 데이트 스타일은?',
    choices: [
      '집에서 활동적으로 만나기',
      '집에서 정적으로 만나기',
      '밖에서 활동적으로 만나기',
      '밖에서 정적으로 만나기',
      '비대면으로 만나기',
    ],
  },
  {
    type: QuestionType.COMMON,
    question: '다음 중 상대방이 가장 매력적으로 보이는 순간은?',
    choices: [
      '닭다리 두 개를 다 양보해줄 때',
      '보고 싶다고 하면 바로 달려와줄 때',
      '부탁하지 않아도 넷플X스 계정을 공유해줄 때',
      '자려고 누웠는데, 불을 대신 꺼줄 때',
      '화났을 때 눈치 껏 가만히 둘 때',
    ],
  },
  {
    type: QuestionType.COMMON,
    question: "이 중 다른건 다 안맞아도 '이건 꼭 맞아야한다'라고 생각하는 것은?",
    choices: ['경제관념', '옷 입는 스타일', '음식 취향', '대화 스타일', '속궁합'],
  },
];

// 주관식으로 입력 받고, 시험지는 알아서 보기가 4개 채워져서 출제
export const coupleQuestions: ITest[] = [
  {
    type: QuestionType.COUPLE,
    question: '우리가 처음 만난 날 내가 입었던 상의의 색깔은?',
    choices: [],
  },
  {
    type: QuestionType.COUPLE,
    question: '우리가 처음 벚꽃 보러 갔던 장소는?',
    choices: [],
  },
  {
    type: QuestionType.COUPLE,
    question: '너가 내게 처음으로 사랑한다고 말한 장소는?',
    choices: [],
  },
  {
    type: QuestionType.COUPLE,
    question: '우리가 처음으로 데이트한 날짜는?',
    choices: [],
  },
  {
    type: QuestionType.COUPLE,
    question: '우리가 처음으로 데이트한 장소는?',
    choices: [],
  },
  {
    type: QuestionType.COUPLE,
    question: '너가 나에게 처음으로 선물한 것은?',
    choices: [],
  },
  {
    type: QuestionType.COUPLE,
    question: '우리가 처음으로 키스한 날짜는?',
    choices: [],
  },
  {
    type: QuestionType.COUPLE,
    question: '우리가 처음으로 키스한 장소는?',
    choices: [],
  },
  {
    type: QuestionType.COUPLE,
    question: '우리가 처음으로 손을 잡은 날짜는?',
    choices: [],
  },
  {
    type: QuestionType.COUPLE,
    question: '우리가 처음으로 손을 잡은 장소는?',
    choices: [],
  },
  {
    type: QuestionType.COUPLE,
    question: '우리가 처음으로 여행간 날짜는?',
    choices: [],
  },
  {
    type: QuestionType.COUPLE,
    question: '우리가 처음으로 여행간 장소는?',
    choices: [],
  },
  {
    type: QuestionType.COUPLE,
    question: '우리가 처음으로 연락한 날짜는?',
    choices: [],
  },
  {
    type: QuestionType.COUPLE,
    question: '우리가 처음으로 연락한 시간은?',
    choices: [],
  },
  {
    type: QuestionType.COUPLE,
    question: '우리가 처음으로 연락한 장소는?',
    choices: [],
  },
  {
    type: QuestionType.COUPLE,
    question: '우리가 처음으로 연락한 내용은?',
    choices: [],
  },
];
